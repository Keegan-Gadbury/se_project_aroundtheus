!function(){"use strict";class e{constructor(e,t,s){let{name:r,link:o}=e;this._name=r,this._link=o,this._cardSelector=t,this._handleImageClick=s}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleLikeIcon()})),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteCard()})),this._cardImage.addEventListener("click",(()=>{this._handleImageClick(this._name,this._link)}))}_handleDeleteCard(){this._cardElement.remove()}_handleLikeIcon(){this._likeButton.classList.toggle("card__like-button_active")}getView(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._deleteButton=this._cardElement.querySelector(".card__delete-button"),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardTitle=this._cardElement.querySelector(".card__subtitle"),this._cardImage.src=this._link,this._cardTitle.textContent=this._name,this._cardImage.alt=this._name,this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formEl=t,this._inputEls=[...this._formEl.querySelectorAll(this._inputSelector)],this._submitButton=this._formEl.querySelector(this._submitButtonSelector)}_setEventListeners(){this._inputEls.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState(this._submitButton)}))}))}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return!this._inputEls.every((e=>e.validity.valid))}_toggleButtonState(){this._hasInvalidInput(this._inputEls)?(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_showInputError(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}enableValidation(){this._formEl.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._formEl.reset(),this._toggleButtonState(),this._inputEls.forEach((e=>{this._hideInputError(e)}))}}class s{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._closeButton=this._popupElement.querySelector(".modal__close"),this._handleEscClose=this._handleEscClose.bind(this),this._closeOnRemoteClick=this._closeOnRemoteClick.bind(this)}open(){this._popupElement.classList.add("modal__opened"),document.addEventListener("keydown",this._handleEscClose),this._popupElement.addEventListener("mousedown",this._closeOnRemoteClick)}close(){this._popupElement.classList.remove("modal__opened"),document.removeEventListener("keydown",this._handleEscClose),this._popupElement.removeEventListener("mousedown",this._closeOnRemoteClick)}_handleEscClose(e){"Escape"===e.key&&this.close()}_closeOnRemoteClick(e){e.target===e.currentTarget&&this.close()}setEventListeners(){this._closeButton.addEventListener("click",(()=>{this.close()}))}}class r extends s{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._submitButton=this._popupElement.querySelector(".modal__button")}close(){this._popupForm.reset(),super.close()}_getInputValues(){const e=this._popupForm.querySelectorAll(".modal__input"),t={};return e.forEach((e=>t[e.name]=e.value)),t}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())})),super.setEventListeners()}renderLoading(e,t){this._submitButton.textContent=e?t:this._submitButtonText}}class o{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=document.querySelector(t)}renderItems(){this._items.forEach(this._renderer)}addItem(e){this._container.prepend(e)}}const i=document.querySelector("#profile-edit-modal"),n=".cards__list",l=(document.querySelector(n),document.querySelector("#profile-add-modal")),a=i.querySelector(".modal__form"),c=(l.querySelector(".modal__form"),document.querySelector("#profile-edit-button")),d=(i.querySelector(".modal__close"),document.querySelector("#profile-add-button")),u=(document.querySelector("#profile-modal-add-close-button"),document.querySelector(".profile__title"),document.querySelector(".profile__description"),document.querySelector("#profile-title-input")),h=document.querySelector("#profile-description-input");a.querySelector("#editModalSubmitButton"),a.querySelector("#add-create-button"),document.querySelector(".modal__button_profile"),document.querySelector("#profile-image"),document.querySelector("#profile-add-title-input"),document.querySelector("#profile-add-link-input"),document.querySelector("#preview-image-modal"),document.querySelector("#preview-modal-close-button"),document.querySelector("#preview-image-card"),document.querySelector("#preview-image-title");const _={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:".modal__error",errorClass:".modal__input_type_error"},m=(i.querySelector(".modal__form"),document.querySelector("#edit-profile-image-modal"),document.querySelector("#profile-image-edit-button")),p=new class{constructor(e,t,s){this._name=document.querySelector(e),this._about=document.querySelector(t),this._profileImage=s}getUserInfo(){return{name:this._name.textContent,about:this._about.textContent.trim()}}setUserInfo(e){let{name:t,about:s}=e;this._name.textContent=t,this._about.textContent=s}setProfileImage(e){this._profileImage.src=e}}("#profile-title","#profile-description"),E=new r("#profile-add-modal",(function(e){g(e),C.addCard(e),E.close()}));E.setEventListeners();const f=new r("#profile-edit-modal",(function(e){p.setUserInfo(e),f.close()}));f.setEventListeners();const S=new r("#edit-profile-image-modal",(function(e){p.setProfileImage(e),S.close()}));S.setEventListeners(),new r("#delete-image-modal",(function(e){}));const v=new class extends s{constructor(e){super({popupSelector:e}),this._imageElement=document.querySelector("#preview-image-card"),this._imageCaption=document.querySelector("#preview-image-title")}open(e){this._imageElement.src=e.link,this._imageElement.alt=e.name,this._imageCaption.textContent=e.name,super.open()}}("#preview-image-modal");v.setEventListeners(),new t(_,document.getElementById("edit-form")).enableValidation();const y=new t(_,document.getElementById("add-card-form"));let b;function g(t){const s=new e(t,"#card-template",(()=>function(e){v.open(e)}(t))),r=s.getView();b.addItem(r)}y.enableValidation(),c.addEventListener("click",(()=>{const e=p.getUserInfo();u.value=e.name,h.value=e.about,f.open()})),d.addEventListener("click",(()=>{y.resetValidation(),E.open()})),m.addEventListener("click",(()=>{S.open()}));const C=new class{constructor(e){this._baseUrl=e.baseUrl,this._headers=e.headers}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._checkResponse)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._checkResponse)}editUserInfo(e){let{title:t,description:s}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:s})}).then(this._checkResponse)}addCard(e){let{name:t,link:s}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})}).then(this._checkResponse)}deleteCard(e){let{_id:t}=e;return fetch(`${this._baseUrl}/cards/${t}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}addLikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this._checkResponse)}removeLikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}editProfileImage(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"7739976c-9dc6-43c2-bc75-8784e64b22c6","Content-Type":"application/json"}});C.getInitialCards().then((e=>{b=new o({items:e,renderer:g},n),b.renderItems()})).catch((e=>{console.error(e)})),C.getUserInfo().then((e=>{p.setUserInfo(e),p.setProfileImage(e.avatar)})).catch((e=>{console.error(e)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,