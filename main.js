!function(){"use strict";class e{constructor(e,t,s){let{name:o,link:n}=e;this._name=o,this._link=n,this._cardSelector=t,this._handleImageClick=s}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleLikeIcon()})),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteCard()})),this._cardImage.addEventListener("click",(()=>{this._handleImageClick(this._name,this._link)}))}_handleDeleteCard(){this._cardElement.remove()}_handleLikeIcon(){this._likeButton.classList.toggle("card__like-button_active")}getView(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._deleteButton=this._cardElement.querySelector(".card__delete-button"),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardTitle=this._cardElement.querySelector(".card__subtitle"),this._cardImage.src=this._link,this._cardTitle.textContent=this._name,this._cardImage.alt=this._name,this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formEl=t,this._inputEls=[...this._formEl.querySelectorAll(this._inputSelector)],this._submitButton=this._formEl.querySelector(this._submitButtonSelector)}_setEventListeners(){this._inputEls.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState(this._submitButton)}))}))}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return!this._inputEls.every((e=>e.validity.valid))}_toggleButtonState(){this._hasInvalidInput(this._inputEls)?(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_showInputError(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}enableValidation(){this._formEl.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._formEl.reset(),this._toggleButtonState(),this._inputEls.forEach((e=>{this._hideInputError(e)}))}}class s{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._closeButton=this._popupElement.querySelector(".modal__close"),this._handleEscClose=this._handleEscClose.bind(this),this._closeOnRemoteClick=this._closeOnRemoteClick.bind(this)}open(){this._popupElement.classList.add("modal__opened"),document.addEventListener("keydown",this._handleEscClose),this._popupElement.addEventListener("mousedown",this._closeOnRemoteClick)}close(){this._popupElement.classList.remove("modal__opened"),document.removeEventListener("keydown",this._handleEscClose),this._popupElement.removeEventListener("mousedown",this._closeOnRemoteClick)}_handleEscClose(e){"Escape"===e.key&&this.close()}_closeOnRemoteClick(e){e.target===e.currentTarget&&this.close()}setEventListeners(){this._closeButton.addEventListener("click",(()=>{this.close()}))}}class o extends s{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t}close(){this._popupForm.reset(),super.close()}_getInputValues(){const e=this._popupForm.querySelectorAll(".modal__input"),t={};return e.forEach((e=>t[e.name]=e.value)),t}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())})),super.setEventListeners()}}const n=document.querySelector("#profile-edit-modal"),r=(document.querySelector(".cards__list"),document.querySelector("#profile-add-modal")),i=n.querySelector(".modal__form"),l=(r.querySelector(".modal__form"),document.querySelector("#profile-edit-button")),a=(n.querySelector(".modal__close"),document.querySelector("#profile-add-button")),c=(document.querySelector("#profile-modal-add-close-button"),document.querySelector(".profile__title"),document.querySelector(".profile__description"),document.querySelector("#profile-title-input")),u=document.querySelector("#profile-description-input");i.querySelector("#editModalSubmitButton"),i.querySelector("#add-create-button"),document.querySelector("#profile-add-title-input"),document.querySelector("#profile-add-link-input"),document.querySelector("#preview-image-modal"),document.querySelector("#preview-modal-close-button"),document.querySelector("#preview-image-card"),document.querySelector("#preview-image-title");const d={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:".modal__error",errorClass:".modal__input_type_error"},m=(n.querySelector(".modal__form"),new class{constructor(e,t){this._name=document.querySelector(e),this._about=document.querySelector(t)}getUserInfo(){return{name:this._name.textContent,about:this._about.textContent.trim()}}setUserInfo(e){let{title:t,description:s}=e;this._name.textContent=t,this._about.textContent=s}}("#profile-title","#profile-description")),_=new o("#profile-add-modal",(function(e){S(e),_.close()}));_.setEventListeners();const h=new o("#profile-edit-modal",(function(e){m.setUserInfo(e),h.close()}));h.setEventListeners();const p=new class extends s{constructor(e){super({popupSelector:e}),this._imageElement=document.querySelector("#preview-image-card"),this._imageCaption=document.querySelector("#preview-image-title")}open(e){this._imageElement.src=e.link,this._imageElement.alt=e.name,this._imageCaption.textContent=e.name,super.open()}}("#preview-image-modal");p.setEventListeners();const E=new class{constructor(e,t){let{items:s,renderer:o}=e;this._items=s,this._renderer=o,this._container=document.querySelector(t)}renderItems(){this._items.forEach(this._renderer)}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:S},".cards__list");function S(t){const s=new e(t,"#card-template",(()=>function(e){p.open(e)}(t))),o=s.getView();E.addItem(o)}new t(d,document.getElementById("edit-form")).enableValidation();const v=new t(d,document.getElementById("add-card-form"));v.enableValidation(),E.renderItems(),l.addEventListener("click",(()=>{const e=m.getUserInfo();c.value=e.name,u.value=e.about,h.open()})),a.addEventListener("click",(()=>{v.resetValidation(),_.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,